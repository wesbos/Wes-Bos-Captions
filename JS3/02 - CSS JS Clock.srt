

00:00:00.348 --> 00:00:03,564 line:100% position:50% align:middle
♪ [music] ♪

00:00:07.814 --> 00:00:11,310 line:100% position:50% align:middle
Hello everybody, Wes Bos here.
Hopefully, you're having a great day.

00:00:11.310 --> 00:00:15,189 line:100% position:50% align:middle
Today we are going to be making
this pretty sweet CSS clock.

00:00:15.189 --> 00:00:19,024 line:100% position:50% align:middle
Now, what this does is it takes in
the current time from JavaScript

00:00:19.024 --> 00:00:23,691 line:100% position:50% align:middle
and it's going to update these hands,
second hands that we've got going on here,

00:00:23.691 --> 00:00:28,637 line:100% position:50% align:middle
based on the current hour, minute,
second that we are seeing.

00:00:28.637 --> 00:00:33,170 line:100% position:50% align:middle
So let's take a look at our HTML
that we've got going on here.

00:00:33.170 --> 00:00:37,690 line:100% position:50% align:middle
We've got a div with a class of clock.
We have a clock face which is this circle

00:00:37.690 --> 00:00:42,310 line:100% position:50% align:middle
here, and then we have three
separate divs for hand, hand, hand,

00:00:42.310 --> 00:00:46,690 line:100% position:50% align:middle
which is our hour, our minute, and
our second. Now, let's open that up.

00:00:46.690 --> 00:00:51,050 line:100% position:50% align:middle
This is the answer. This is sort of what
we're going for with this realistic tick

00:00:51.050 --> 00:00:55,834 line:100% position:50% align:middle
and we're going to write the CSS that
is important to getting this done.

00:00:55.834 --> 00:00:58,600 line:100% position:50% align:middle
So I've specifically left that part out.

00:00:58.600 --> 00:01:02,990 line:100% position:50% align:middle
So here we go, this is what it looks like
by default. I've got these three hand

00:01:02.990 --> 00:01:09,890 line:100% position:50% align:middle
divs. We go ahead and inspect, then we can
inspect this hand div. And you'll see that

00:01:09.890 --> 00:01:14,820 line:100% position:50% align:middle
all three of them are just stacked upon
each other. The idea that we're going for

00:01:14.820 --> 00:01:19,710 line:100% position:50% align:middle
here is that we're going to apply a rotate
to each of the hands depending on what

00:01:19.710 --> 00:01:24,410 line:100% position:50% align:middle
time it currently is. So how do we do
that? Well, you could just go to this.

00:01:24.410 --> 00:01:31,410 line:100% position:50% align:middle
Let's try the second hand.
We'd say, transform, rotate 20 degrees.

00:01:31.410 --> 00:01:35,880 line:100% position:50% align:middle
Now, the problem that we're going to have
here is, by default, it's going to rotate

00:01:35.880 --> 00:01:40,980 line:100% position:50% align:middle
itself on the exact middle of the element.
And in most cases, that's exactly what you

00:01:40.980 --> 00:01:45,111 line:100% position:50% align:middle
want. But in this case, it's not what we
want at all. What we want to do is

00:01:45.111 --> 00:01:51,195 line:100% position:50% align:middle
we want to rotate it on the very
right-hand side. So that's right in the

00:01:51.195 --> 00:01:56,164 line:100% position:50% align:middle
middle here. And that's what we're
going to go into our CSS where it says

00:01:56.164 --> 00:02:00,471 line:100% position:50% align:middle
".hand" and we are going to
transform the origin.

00:02:00.471 --> 00:02:04,350 line:100% position:50% align:middle
Now, the origin is where it's going to do
the rotation off of. So we're going to

00:02:04.350 --> 00:02:09,438 line:100% position:50% align:middle
say, transform origin. We're just going to
say, 100%. And that we'll do along the

00:02:09.438 --> 00:02:15,452 line:100% position:50% align:middle
x-axis. By default, it's 50%, so if I were
to change that to 50% and I were to

00:02:15.452 --> 00:02:21,570 line:100% position:50% align:middle
transform it, you see, it's just in the
middle. But if I were to change that

00:02:21.570 --> 00:02:26,702 line:100% position:50% align:middle
origin up to...See, as I move this
origin, it changes where it goes off of

00:02:26.702 --> 00:02:33,285 line:100% position:50% align:middle
and a 100% along the x-axis will put that
pivot point on the very right-hand side.

00:02:33.285 --> 00:02:39,160 line:100% position:50% align:middle
That's why we change it to 100%. Now,
that's going to allow us to pivot them

00:02:39.160 --> 00:02:44,140 line:100% position:50% align:middle
all. The other problem now is that
because divs are block and they're left to

00:02:44.140 --> 00:02:48,190 line:100% position:50% align:middle
right, it's not actually starting at
12:00. So how do we do that?

00:02:48.190 --> 00:02:51,420 line:100% position:50% align:middle
Well, we could just rotate the entire
thing by default, 90 degrees.

00:02:51.420 --> 00:02:58,759 line:100% position:50% align:middle
So I'm going to say, transform, rotate,
90 degrees. Okay, good.

00:02:58.759 --> 00:03:01,987 line:100% position:50% align:middle
Now we've got all of our hands
pointing up and down.

00:03:01.987 --> 00:03:06,190 line:100% position:50% align:middle
Then the final thing we want to do is we
want to apply a bit of a transition.

00:03:06.190 --> 00:03:12,030 line:100% position:50% align:middle
If I put a rotate on here you'll see that
as it's 20 to 120, to 20 to 120,

00:03:12.030 --> 00:03:15,873 line:100% position:50% align:middle
to however many, it just immediately goes.
So we can go in here and we can say,

00:03:15.873 --> 00:03:22,699 line:100% position:50% align:middle
transition, all, .05 seconds. Now when we
rotate, it's going to transition itself

00:03:22.699 --> 00:03:26,340 line:100% position:50% align:middle
and that's going to be every second
it'll tick itself around.

00:03:26.340 --> 00:03:31,000 line:100% position:50% align:middle
Now, you might like that but what's kind
of cool about this is you can also do

00:03:31.000 --> 00:03:35,990 line:100% position:50% align:middle
something like this where you can say,
transition timing function and give it

00:03:35.990 --> 00:03:40,220 line:100% position:50% align:middle
like, any one of these like ease in out.
You can just pick whatever one you want,

00:03:40.220 --> 00:03:44,371 line:100% position:50% align:middle
you can try it out. You see how it eases
itself in and out? You might like that as

00:03:44.371 --> 00:03:49,282 line:100% position:50% align:middle
well. But if you click on this little
cubic bezier editor, you can actually make

00:03:49.282 --> 00:03:54,798 line:100% position:50% align:middle
some pretty fun ones, where, if you just
jack it right up like this, now when you

00:03:54.798 --> 00:04:00,220 line:100% position:50% align:middle
change it, it gives you this tick. It goes
forward and back, forward and back.

00:04:00.220 --> 00:04:04,489 line:100% position:50% align:middle
So what I'm going to do is I'm going to
take that transition timing function

00:04:04.489 --> 00:04:10,816 line:100% position:50% align:middle
and pop that in. Then I'm also going to
take this down to 0.05 seconds, just nice

00:04:10.816 --> 00:04:13,580 line:100% position:50% align:middle
and quick. So let's see what it
looks like when we do that.

00:04:13.580 --> 00:04:15,364 line:100% position:50% align:middle
Transform, there we go.

00:04:15.364 --> 00:04:18,278 line:100% position:50% align:middle
That gives us the nice, snappy
little tick, tick, tick, tick, tick.

00:04:18.278 --> 00:04:22,342 line:100% position:50% align:middle
That's exactly what we're looking for,
where it will go a little bit over

00:04:22.342 --> 00:04:25,837 line:100% position:50% align:middle
its bounds and then it will snap back.
And because we did it so quickly,

00:04:25.837 --> 00:04:28,797 line:100% position:50% align:middle
it gives us sort of that
realistic ticking feature.

00:04:28.797 --> 00:04:32,590 line:100% position:50% align:middle
Good. So we did our transform margin,
our transform, our transition,

00:04:32.590 --> 00:04:36,830 line:100% position:50% align:middle
and our transition timing function of
cubic bezier. Now let's actually write the

00:04:36.830 --> 00:04:41,690 line:100% position:50% align:middle
JavaScript that's going to update how we
are so far. Let's start with our second

00:04:41.690 --> 00:04:44,680 line:100% position:50% align:middle
hand just because that updates most
often and we're going to see it tick,

00:04:44.680 --> 00:04:50,190 line:100% position:50% align:middle
tick, tick, all the way around. So first
thing we need to do is create a function

00:04:50.190 --> 00:04:55,798 line:100% position:50% align:middle
called set date and that's just going to
console log "hi." And then we need that

00:04:55.798 --> 00:04:58,132 line:100% position:50% align:middle
to run, how often? Well, every second.

00:04:58.132 --> 00:05:02,400 line:100% position:50% align:middle
So how do you run something every second?
You give yourself a set interval which

00:05:02.400 --> 00:05:06,476 line:100% position:50% align:middle
is going to be a set date, and that is
going to run every second which is

00:05:06.476 --> 00:05:12,958 line:100% position:50% align:middle
1000 milliseconds. Now let's see if
that's working. Hi, hi, hi, okay, good.

00:05:12.958 --> 00:05:16,460 line:100% position:50% align:middle
That's working for us. However, we don't
want to console log hi, we want to grab

00:05:16.460 --> 00:05:22,683 line:100% position:50% align:middle
the date. Say, const now equals
new date. And then the seconds

00:05:22.683 --> 00:05:30,670 line:100% position:50% align:middle
is going to be now dot get seconds.
And let's console log the seconds,

00:05:30.670 --> 00:05:36,490 line:100% position:50% align:middle
56, 57, 58, okay. So what that is doing is
it's getting us the seconds of the current

00:05:36.490 --> 00:05:43,180 line:100% position:50% align:middle
minute. Now, how do we turn that into a
degree? Well first we need to turn it into

00:05:43.180 --> 00:05:48,520 line:100% position:50% align:middle
something that is base 100 so that we can
get like...at zero, it's going to be zero

00:05:48.520 --> 00:05:55,120 line:100% position:50% align:middle
degrees. At 100%, it's going to 360
degrees. So we will go down here and say

00:05:55.120 --> 00:06:01,290 line:100% position:50% align:middle
const seconds degrees equals. We're
going to say seconds divided by 60 and

00:06:01.290 --> 00:06:05,820 line:100% position:50% align:middle
that's going to give us our percentage
that we have. And we're going to multiply

00:06:05.820 --> 00:06:10,080 line:100% position:50% align:middle
that by 360 because that
would be our full.

00:06:10.080 --> 00:06:16,410 line:100% position:50% align:middle
So if it's 60 divided by 60, it's going to
be one times 360, that's going to be 360

00:06:16.410 --> 00:06:21,342 line:100% position:50% align:middle
degrees. Then we can finally just take our
second hand, which we have not yet

00:06:21.342 --> 00:06:24,807 line:100% position:50% align:middle
selected. We can select it.
You can either select it like, inside,

00:06:24.807 --> 00:06:29,300 line:100% position:50% align:middle
outside and pass it in. I'm just going to
select it outside here and reach outside

00:06:29.300 --> 00:06:33,470 line:100% position:50% align:middle
to grab it. However, depending on how you
like to design your functions, you can

00:06:33.470 --> 00:06:34,000 line:100% position:50% align:middle
pass it in as well.

00:06:34.000 --> 00:06:39,130 line:100% position:50% align:middle
So I want to say const second hand
equals document dot query selector.

00:06:39.130 --> 00:06:45,380 line:100% position:50% align:middle
Then we have to take that second hand
and we'll apply some styles to it.

00:06:45.380 --> 00:06:53,030 line:100% position:50% align:middle
Second hand dot style dot transform is
going to be equal to, we'll use some ES6

00:06:53.030 --> 00:06:58,070 line:100% position:50% align:middle
template literals here. Rotate. How many
degrees? Usually it'd be like, 100 degrees

00:06:58.070 --> 00:07:01,850 line:100% position:50% align:middle
but that is going to be in
the seconds degrees.

00:07:01.850 --> 00:07:06,170 line:100% position:50% align:middle
Good. So that should get us most of the
way there. Let's see where we're at.

00:07:06.170 --> 00:07:12,250 line:100% position:50% align:middle
Okay, makes sense. But the one problem is
here. I'm almost at 60 seconds but I'm not

00:07:12.250 --> 00:07:16,450 line:100% position:50% align:middle
even nearly halfway through. And the
problem we're having here is because we

00:07:16.450 --> 00:07:23,660 line:100% position:50% align:middle
initially offset it by 90 degrees because
it's by default, left to right, and we

00:07:23.660 --> 00:07:28,660 line:100% position:50% align:middle
want it by default, top to bottom.
What we need to do is just take this,

00:07:28.660 --> 00:07:32,950 line:100% position:50% align:middle
that's why I wrapped these in parentheses,
and we'll add 90 degrees to offset that

00:07:32.950 --> 00:07:36,600 line:100% position:50% align:middle
default 90 degrees that we're
sort of working with here.

00:07:36.600 --> 00:07:41,870 line:100% position:50% align:middle
Let's see where we're at now. Here we go,
15, 16, good. Now, pause the video and

00:07:41.870 --> 00:07:46,008 line:100% position:50% align:middle
I want to see you do both minutes
and hours. It's probably a little

00:07:46.008 --> 00:07:51,151 line:100% position:50% align:middle
self-explanatory, but try to do it
yourself. Otherwise, come back

00:07:51.151 --> 00:07:52,498 line:100% position:50% align:middle
and we'll do the rest together.

00:07:52.498 --> 00:08:00,420 line:100% position:50% align:middle
So we're going to say const mins equals
now dot get minutes. Const mins degrees,

00:08:00.420 --> 00:08:09,940 line:100% position:50% align:middle
equal to mins divided by 60
times 360 plus 90.

00:08:09.940 --> 00:08:15,320 line:100% position:50% align:middle
Then we'll say second hand. Again,
we need to go up here, second hand,

00:08:15.320 --> 00:08:25,410 line:100% position:50% align:middle
mins hand, and also, let's get
the hour hand as well. Okay.

00:08:25.410 --> 00:08:33,360 line:100% position:50% align:middle
Then we're down here. Say, hour hand
dot style dot transform equals,

00:08:33.360 --> 00:08:38,911 line:100% position:50% align:middle
we'll take this exact same thing but we'll
replace it with the minutes degrees

00:08:38.911 --> 00:08:41,047 line:100% position:50% align:middle
rather than that.

00:08:41.047 --> 00:08:44,588 line:100% position:50% align:middle
Let's see. My editor is yelling at me,
I forgot something here.

00:08:44.588 --> 00:08:52,436 line:100% position:50% align:middle
Oh, put a parenthesis there, there we go.
Oh, got a problem. Cannot set property

00:08:52.436 --> 00:08:56,848 line:100% position:50% align:middle
transform of undefined because you've got
to spell style right, otherwise it won't

00:08:56.848 --> 00:09:01,364 line:100% position:50% align:middle
work. Learn to spell, folks. There we go.
Both of those two are now working.

00:09:01.364 --> 00:09:05,138 line:100% position:50% align:middle
You're going to have to wait a full minute
to see it to actually work. Then finally,

00:09:05.138 --> 00:09:13,370 line:100% position:50% align:middle
we'll do the hours one. It's going to be
divided by 12 instead of 60. And then we

00:09:13.370 --> 00:09:20,020 line:100% position:50% align:middle
will take our hour hand, oops. This one is
hour hand, this one should be min hand.

00:09:20.020 --> 00:09:30,220 line:100% position:50% align:middle
Mins hand. Take the hours degree in there.
Awesome. Looks like it is all working for

00:09:30.220 --> 00:09:31,560 line:100% position:50% align:middle
us, it's all running.

00:09:31.560 --> 00:09:36,135 line:100% position:50% align:middle
One little thing that does happen,
you might notice that when you hit the

00:09:36.135 --> 00:09:41,964 line:100% position:50% align:middle
60 seconds, you're going to hit
almost 360 degrees and then

00:09:41.964 --> 00:09:46,329 line:100% position:50% align:middle
all of the sudden, it goes to 2 degrees.
And it's not going to transform

00:09:46.329 --> 00:09:53,967 line:100% position:50% align:middle
itself from right here to right here.
Let's just wait for this to happen.

00:09:53.967 --> 00:09:59,992 line:100% position:50% align:middle
All right, you see how this is about to
clock over? Oh, we get that little weird

00:09:59.992 --> 00:10:03,963 line:100% position:50% align:middle
whoop. And what's happening is it gets to
that final amount of degrees and then we

00:10:03.963 --> 00:10:09,071 line:100% position:50% align:middle
go to transform 0 degrees or 90 degrees
right there. And it goes all the way

00:10:09.071 --> 00:10:12,508 line:100% position:50% align:middle
backwards to get to where it wants,
rather than just going forward.

00:10:12.508 --> 00:10:16,490 line:100% position:50% align:middle
So, a couple things you could do here is
you could just tally the amount of degrees

00:10:16.490 --> 00:10:21,065 line:100% position:50% align:middle
and just keep on counting. Or another
thing you could do is, temporarily,

00:10:21.065 --> 00:10:26,893 line:100% position:50% align:middle
with JavaScript, take off the transition
so that when it ticks to that next one

00:10:26.893 --> 00:10:30,701 line:100% position:50% align:middle
it's not going to go transition itself
backwards. And then reapply it after.

00:10:30.701 --> 00:10:34,579 line:100% position:50% align:middle
And that would be done with some
if statements inside of the set date.

00:10:34.579 --> 00:10:37,957 line:100% position:50% align:middle
Other than that, that's today's one,
and I will see you tomorrow.

00:10:37.957 --> 00:10:40,326 line:100% position:50% align:middle
♪ [music] ♪