WEBVTT

00:00:00.793 --> 00:00:02.861 line:100% position:50% align:middle
♪ [music] ♪

00:00:07.280 --> 00:00:10.240 line:100% position:50% align:middle
All right, let's talk a little bit about
what components are. Now,

00:00:10.240 --> 00:00:14.260 line:100% position:50% align:middle
if you're coming from any other framework
and you're trying to understand,

00:00:14.260 --> 00:00:19.800 line:100% position:50% align:middle
"Where's the models, or the modules, or
the views or the directives?" or any of

00:00:19.800 --> 00:00:23.510 line:100% position:50% align:middle
that good stuff, I need you to just put
that aside. Because React is a little bit

00:00:23.510 --> 00:00:28.720 line:100% position:50% align:middle
different, in that everything in React is
what's called a component.

00:00:28.720 --> 00:00:32.660 line:100% position:50% align:middle
So, I'm going to show you just a couple of
examples of what a component would be and

00:00:32.660 --> 00:00:35.720 line:100% position:50% align:middle
then we'll get into actually building some
of our own.

00:00:35.720 --> 00:00:40.220 line:100% position:50% align:middle
Now, what is a component? A component is a
reusable piece of your website.

00:00:40.220 --> 00:00:45.882 line:100% position:50% align:middle
So if you think of your HTML pages as
built up of a whole bunch of tags, h1 and

00:00:45.882 --> 00:00:51.918 line:100% position:50% align:middle
div and article tag, React sort of takes
that a step further and allows you to

00:00:51.918 --> 00:00:57.770 line:100% position:50% align:middle
build your own tags or components as they
are. And you can supply those tags a whole

00:00:57.770 --> 00:01:01.200 line:100% position:50% align:middle
bunch of information. So if we take a look
at this application right here,

00:01:01.200 --> 00:01:05.530 line:100% position:50% align:middle
we've got this, where we have the fish
picture, we have an add to order button,

00:01:05.530 --> 00:01:08.510 line:100% position:50% align:middle
when you click that button it will add it
to the actual order.

00:01:08.510 --> 00:01:13.390 line:100% position:50% align:middle
We've got the title, we've got the price,
it's formatted nicely and we've got a

00:01:13.390 --> 00:01:18.260 line:100% position:50% align:middle
description of it. Now, any time I would
like to render this on out,

00:01:18.260 --> 00:01:21.390 line:100% position:50% align:middle
I don't need to copy and paste that code.
And let's say I wanted it somewhere else

00:01:21.390 --> 00:01:25.530 line:100% position:50% align:middle
in my application, I don't need to copy
and paste that code, I simply just render

00:01:25.530 --> 00:01:30.610 line:100% position:50% align:middle
out what's called a Fish component. Now,
we can look at that by going to our React

00:01:30.610 --> 00:01:34.840 line:100% position:50% align:middle
DevTools. If you don't see React DevTools,
make sure you have it installed first.

00:01:34.840 --> 00:01:38.650 line:100% position:50% align:middle
And second of all, make sure you're
actually on a page that has React loaded.

00:01:38.650 --> 00:01:44.300 line:100% position:50% align:middle
Facebook, Instagram are good examples for
that, as well as the demo application for

00:01:44.300 --> 00:01:48.400 line:100% position:50% align:middle
Catch of the Day. So what I like to do to
actually get to the component that is

00:01:48.400 --> 00:01:52.550 line:100% position:50% align:middle
here, is I like to use Inspect Element.
Right click inspect or use your shortcut.

00:01:52.550 --> 00:01:58.270 line:100% position:50% align:middle
So just get somewhere in this HTML. And
this is the HTML that React kicks out for

00:01:58.270 --> 00:02:02.820 line:100% position:50% align:middle
you, this is the HTML that it renders for
you. But if you hop on over to your React

00:02:02.820 --> 00:02:08.520 line:100% position:50% align:middle
DevTools here, you'll see that it actually
brings you out into how React sees it,

00:02:08.520 --> 00:02:12.050 line:100% position:50% align:middle
and you can see all of these things, they
look like custom tags but those are just

00:02:12.050 --> 00:02:17.100 line:100% position:50% align:middle
components inside of React. And you can
see that I've got all of these different

00:02:17.100 --> 00:02:22.320 line:100% position:50% align:middle
Fish components. Now, any time that I want
to render out this display here,

00:02:22.320 --> 00:02:26.570 line:100% position:50% align:middle
as well as bring along any of the
functionality that it has, I simply just

00:02:26.570 --> 00:02:30.090 line:100% position:50% align:middle
need to render out a Fish tag and pass it
any information that it needs.

00:02:30.090 --> 00:02:33.700 line:100% position:50% align:middle
And in this case it needs a whole bunch of
information about, like,

00:02:33.700 --> 00:02:38.670 line:100% position:50% align:middle
"What's the image? What's the description?
Etc., etc." So that is a Fish component,

00:02:38.670 --> 00:02:42.560 line:100% position:50% align:middle
and it's a nice, tidy little component.
And one of the benefits to that,

00:02:42.560 --> 00:02:46.800 line:100% position:50% align:middle
among other things, is that if you have
somebody on your team and you want them to

00:02:46.800 --> 00:02:50.940 line:100% position:50% align:middle
work on just a specific component, you can
just give them access to that component

00:02:50.940 --> 00:02:55.050 line:100% position:50% align:middle
file where they don't necessarily need to
be working on the entire app.

00:02:55.050 --> 00:02:58.650 line:100% position:50% align:middle
That's especially helpful when you're
working with designers who need to mock up

00:02:58.650 --> 00:03:02.630 line:100% position:50% align:middle
the HTML and the CSS and they don't
necessarily need to write a ton of

00:03:02.630 --> 00:03:07.540 line:100% position:50% align:middle
JavaScript. So I've got my Fish component
here, I've got this Header component right

00:03:07.540 --> 00:03:10.950 line:100% position:50% align:middle
here. You see that I pass in something
with that's called "Props."

00:03:10.950 --> 00:03:15.650 line:100% position:50% align:middle
We're going to learn all about props,
state and context. We also have an Order

00:03:15.650 --> 00:03:19.610 line:100% position:50% align:middle
component here. We've got an Inventory
component here. If you open those up,

00:03:19.610 --> 00:03:23.550 line:100% position:50% align:middle
you're going to see some further
components inside of there. We're going to

00:03:23.550 --> 00:03:29.150 line:100% position:50% align:middle
use animation components to animate the
values on in. So, any time you have a

00:03:29.150 --> 00:03:33.760 line:100% position:50% align:middle
piece of your application, it's generally
good that we build it into it's own little

00:03:33.760 --> 00:03:37.990 line:100% position:50% align:middle
component. And that's going to allow us to
have reusable code,

00:03:37.990 --> 00:03:43.220 line:100% position:50% align:middle
as well as use React DevTools to see where
everything is in. Now,

00:03:43.220 --> 00:03:47.570 line:100% position:50% align:middle
if I click on our App component, that's
sort of like the parent component here,

00:03:47.570 --> 00:03:50.980 line:100% position:50% align:middle
and there's a whole bunch of other stuff
for routing, you're going to see that we

00:03:50.980 --> 00:03:55.720 line:100% position:50% align:middle
have this thing called "state." And if you
open that up, these are all of the fish

00:03:55.720 --> 00:04:00.040 line:100% position:50% align:middle
that we have listed in our document here.
And you can see that this fish data,

00:04:00.040 --> 00:04:05.990 line:100% position:50% align:middle
if we open fish1, we have Pacific
Halibut. And that is then referenced right

00:04:05.990 --> 00:04:10.360 line:100% position:50% align:middle
here, it's referenced in the order, as
well as it's referenced in the inventory.

00:04:10.360 --> 00:04:14.550 line:100% position:50% align:middle
And if you were then to change this state,
and we're going to learn all about how to

00:04:14.550 --> 00:04:21.310 line:100% position:50% align:middle
do that to something like, "Yummy Fish,"
and I hit Enter, you'll see that anywhere

00:04:21.310 --> 00:04:26.820 line:100% position:50% align:middle
that state, anywhere that data was
referenced (Yummy Fish), has changed.

00:04:26.820 --> 00:04:31.850 line:100% position:50% align:middle
It's updated here, here and here. And
that's sort of the huge power behind

00:04:31.850 --> 00:04:36.030 line:100% position:50% align:middle
React, is that we're going to build these
components, like a Fish component and an

00:04:36.030 --> 00:04:41.350 line:100% position:50% align:middle
Order component and an Inventory
component, and they all pull on some data

00:04:41.350 --> 00:04:45.990 line:100% position:50% align:middle
that we have and we pass in. And anytime
that data changes, that's no problem

00:04:45.990 --> 00:04:49.430 line:100% position:50% align:middle
because React is going to figure out where
it should then update itself.

00:04:49.430 --> 00:04:53.410 line:100% position:50% align:middle
So I really like to just go into people's
websites that have React and see how

00:04:53.410 --> 00:04:59.050 line:100% position:50% align:middle
they've set it up themselves. The player
for this video series here is actually

00:04:59.050 --> 00:05:03.310 line:100% position:50% align:middle
built in React as well. So if were to just
inspect one of these video links down

00:05:03.310 --> 00:05:06.720 line:100% position:50% align:middle
here... and these title might look a
little bit different for you because I'm

00:05:06.720 --> 00:05:10.870 line:100% position:50% align:middle
re-recording them right now. And flip on
over to the React DevTools,

00:05:10.870 --> 00:05:16.060 line:100% position:50% align:middle
you'll see that I have created a whole
bunch of components. These are the Video

00:05:16.060 --> 00:05:21.160 line:100% position:50% align:middle
components that I've made, and each Video
component is going to render out the

00:05:21.160 --> 00:05:25.830 line:100% position:50% align:middle
number, the video, the title, the
timestamp here in a nice, little displayed

00:05:25.830 --> 00:05:29.620 line:100% position:50% align:middle
span, as well as it carries all of the
JavaScript that it needs to make it play.

00:05:29.620 --> 00:05:33.120 line:100% position:50% align:middle
So if I click one and it's going to update
the player, it's going to update the URL

00:05:33.120 --> 00:05:36.460 line:100% position:50% align:middle
bar and the routing is going to kick in.
So if I click on one of them,

00:05:36.460 --> 00:05:40.120 line:100% position:50% align:middle
you'll see that there's some `Props`,
there's some `Context`, we're going to see

00:05:40.120 --> 00:05:45.150 line:100% position:50% align:middle
`state` in some other ones. And if I were
then to go to the viewer one,

00:05:45.150 --> 00:05:51.470 line:100% position:50% align:middle
look at my state, you see that I have this
videos array which is all 17 videos,

00:05:51.470 --> 00:05:56.790 line:100% position:50% align:middle
or however many videos your current
package has. You can see that I can change

00:05:56.790 --> 00:06:02.690 line:100% position:50% align:middle
that to "Wes is cool." And, again,
anywhere that data has then been

00:06:02.690 --> 00:06:07.960 line:100% position:50% align:middle
referenced, like right here as well as
right here, React is just going to update

00:06:07.960 --> 00:06:13.540 line:100% position:50% align:middle
itself anywhere on the page. We don't need
to select the DOM element and update it

00:06:13.540 --> 00:06:18.260 line:100% position:50% align:middle
for ourself, because we've went ahead and
created these Video components beforehand

00:06:18.260 --> 00:06:22.050 line:100% position:50% align:middle
and we're going to see how we can infuse
that data right into the component.

00:06:22.050 --> 00:06:25.620 line:100% position:50% align:middle
So it's kind of fun to go into different
websites. Like Instagram and Facebook are

00:06:25.620 --> 00:06:29.940 line:100% position:50% align:middle
two major users of React. They're the ones
that initially built React,

00:06:29.940 --> 00:06:35.010 line:100% position:50% align:middle
and you can kind of see what they've done
here. They're a little bit more

00:06:35.010 --> 00:06:40.620 line:100% position:50% align:middle
complicated on Facebook and Instagram,
just because they don't use very well-named

00:06:40.620 --> 00:06:44.760 line:100% position:50% align:middle
components here. They have, like,
"i" and "r" but you can see "r" is

00:06:44.760 --> 00:06:49.350 line:100% position:50% align:middle
something like the source of the actual
image, how many likes are associated with

00:06:49.350 --> 00:06:54.040 line:100% position:50% align:middle
it, the caption. And maybe "i" here is
probably all the comments.

00:06:54.040 --> 00:06:57.790 line:100% position:50% align:middle
Let's see here. Yes, they've got an array
of all the comments here,

00:06:57.790 --> 00:07:02.560 line:100% position:50% align:middle
so I could go ahead and change that to
"cool" and it's going to update the actual

00:07:02.560 --> 00:07:06.640 line:100% position:50% align:middle
comment there. So it's kind of fun to just
poke around at all the different

00:07:06.640 --> 00:07:10.940 line:100% position:50% align:middle
components here. Components are reusable
pieces of code that we're going to use in

00:07:10.940 --> 00:07:15.620 line:100% position:50% align:middle
our application over and over again, as
well as attach data in an event,

00:07:15.620 --> 00:07:19.240 line:100% position:50% align:middle
listeners, like clicking, and hovering,
and scrolling and all that good stuff.

00:07:19.240 --> 00:07:22.670 line:100% position:50% align:middle
So let's actually get to scaffolding out
some of our own components that we could

00:07:22.670 --> 00:07:25.000 line:100% position:50% align:middle
build in our Catch of the Day app.
