WEBVTT

1
00:00:00.522 --> 00:00:03.272 line:15% 
(cheerful music)

2
00:00:07.660 --> 00:00:09.320
<v Wes>Two fundamental concepts that we're going to cover</v>

3
00:00:09.320 --> 00:00:11.500
in this course are props and state.

4
00:00:11.500 --> 00:00:13.450
And props are the first one that we're

5
00:00:13.450 --> 00:00:14.590
going to learn about and

6
00:00:14.590 --> 00:00:17.830
they are very similar to HTML attribute so

7
00:00:17.830 --> 00:00:19.700
if you've ever had an image tag before

8
00:00:19.700 --> 00:00:21.610
you always know that you have to provide

9
00:00:21.610 --> 00:00:23.370
at least two things, the first thing

10
00:00:23.370 --> 00:00:25.860
you need to tell is source, which is dog.jpg,

11
00:00:25.860 --> 00:00:29.410
and alt, which is the alternate description of that.

12
00:00:29.410 --> 00:00:31.740
Now, those two things, these attributes,

13
00:00:31.740 --> 00:00:35.500
they provide more information to the tag, why?

14
00:00:35.500 --> 00:00:37.240
Because without those two things,

15
00:00:37.240 --> 00:00:39.200
the tag would not be able to render itself

16
00:00:39.200 --> 00:00:40.818
to the page, because it has no idea

17
00:00:40.818 --> 00:00:43.330
about the information that is required of it.

18
00:00:43.330 --> 00:00:45.850
Same thing if I have an input with the type of text,

19
00:00:45.850 --> 00:00:49.160
it needs to know what type of input it's going to be

20
00:00:49.160 --> 00:00:51.250
before it renders out to the page.

21
00:00:51.250 --> 00:00:53.780
Now, because we're dealing with components,

22
00:00:53.780 --> 00:00:56.400
this is very much the same way in React,

23
00:00:56.400 --> 00:00:58.820
however, they're not called attributes anymore,

24
00:00:58.820 --> 00:01:00.020
they're called props.

25
00:01:00.020 --> 00:01:03.910
And props are the way that we get data into a component.

26
00:01:03.910 --> 00:01:05.670
And this is going to be very very handy,

27
00:01:05.670 --> 00:01:06.930
because we just talk about this,

28
00:01:06.930 --> 00:01:09.250
let's go into our React dev tools here and

29
00:01:09.250 --> 00:01:11.260
remember that we have this app layout,

30
00:01:11.260 --> 00:01:13.550
and inside of app we have our header,

31
00:01:13.550 --> 00:01:15.020
our order, and inventory.

32
00:01:15.020 --> 00:01:15.940
What's going to happen is,

33
00:01:15.940 --> 00:01:18.480
we're going to have some data that lives in our app

34
00:01:18.480 --> 00:01:20.300
and we're going to need some way to get

35
00:01:20.300 --> 00:01:22.940
the data from our app into our header component,

36
00:01:22.940 --> 00:01:25.370
or, in our case, if someone's going to pass

37
00:01:25.370 --> 00:01:27.800
any type of data into the header component,

38
00:01:27.800 --> 00:01:30.070
how do we then access it from inside

39
00:01:30.070 --> 00:01:31.460
of the header component?

40
00:01:31.460 --> 00:01:34.750
And that is how props work, and that's what props are for.

41
00:01:34.750 --> 00:01:37.740
I always like to think about props and state,

42
00:01:37.740 --> 00:01:38.990
we're going to go into state in a bit,

43
00:01:38.990 --> 00:01:40.670
you can come back to this.

44
00:01:40.670 --> 00:01:42.260
State is where the data lives.

45
00:01:42.260 --> 00:01:43.970
State is the data's home

46
00:01:43.970 --> 00:01:46.930
and props is how the data gets to where it needs to go

47
00:01:46.930 --> 00:01:49.490
and so state is like, state is the home

48
00:01:49.490 --> 00:01:52.070
and props is like a bus, or a car,

49
00:01:52.070 --> 00:01:54.630
that's how it gets to its end destination

50
00:01:54.630 --> 00:01:57.080
of where it actually needs to be displayed.

51
00:01:57.080 --> 00:02:00.350
So, let's go into our header.js

52
00:02:00.350 --> 00:02:02.790
and let's open up our app.js

53
00:02:02.790 --> 00:02:04.660
those are the only two that we need.

54
00:02:04.660 --> 00:02:07.400
And I need to be able to make this tagline

55
00:02:07.400 --> 00:02:09.270
that we have here, "Fresh Seafood Market",

56
00:02:09.270 --> 00:02:10.670
I need to make that dynamic,

57
00:02:10.670 --> 00:02:12.500
I want to be able to pass it in,

58
00:02:12.500 --> 00:02:14.660
because maybe that's coming from a database

59
00:02:14.660 --> 00:02:15.990
or it's in a variable, or you just

60
00:02:15.990 --> 00:02:18.150
want to pass it in when you use the header.

61
00:02:18.150 --> 00:02:20.120
So what we do is, we go into app.

62
00:02:20.120 --> 00:02:22.490
And we simply just make up our own props.

63
00:02:22.490 --> 00:02:25.250
There are no preset props that you are

64
00:02:25.250 --> 00:02:27.140
supposed to use and not supposed to use,

65
00:02:27.140 --> 00:02:29.010
you simply just go ahead and make them up.

66
00:02:29.010 --> 00:02:31.160
Obviously you can't use any of the existing ones

67
00:02:31.160 --> 00:02:33.560
that will overwrite HTML attributes,

68
00:02:33.560 --> 00:02:36.060
but past that, the sky is the limit.

69
00:02:36.060 --> 00:02:38.190
So let's just call it tagline

70
00:02:38.190 --> 00:02:41.440
and let's set it to Wes Is Cool.

71
00:02:41.440 --> 00:02:43.100
Give that a save, go back here,

72
00:02:43.100 --> 00:02:45.440
I want you to open up your React dev tools

73
00:02:45.440 --> 00:02:47.620
and we'll go look for our header

74
00:02:47.620 --> 00:02:49.130
now when you click on the header,

75
00:02:49.130 --> 00:02:50.960
you're going to see that this props

76
00:02:50.960 --> 00:02:53.380
is now populated in the sidebar here.

77
00:02:53.380 --> 00:02:55.730
So props is kind of like an object,

78
00:02:55.730 --> 00:02:58.100
an object of data that got passed in,

79
00:02:58.100 --> 00:03:01.410
sort of like an argument's object in a function

80
00:03:01.410 --> 00:03:03.440
of everything that got passed in.

81
00:03:03.440 --> 00:03:05.920
So we now know that we have the tagline

82
00:03:05.920 --> 00:03:08.030
available to us now you can pass in

83
00:03:08.030 --> 00:03:10.000
any number of different types and

84
00:03:10.000 --> 00:03:11.980
we're going to be talking about how to validate these

85
00:03:11.980 --> 00:03:14.530
with something called prop types in a future video,

86
00:03:14.530 --> 00:03:18.950
now you can say age equals 500 and you notice how

87
00:03:18.950 --> 00:03:20.040
this is a little bit different

88
00:03:20.040 --> 00:03:22.070
if you want to pass in a number

89
00:03:22.070 --> 00:03:23.310
you have to use curly brackets

90
00:03:23.310 --> 00:03:25.910
if you want to pass in anything other than a string,

91
00:03:25.910 --> 00:03:27.740
you have to be using curly brackets

92
00:03:27.740 --> 00:03:30.900
so I could say like cool equals true.

93
00:03:32.800 --> 00:03:36.090
Now and if I go back to my header here,

94
00:03:36.090 --> 00:03:39.240
you'll see that we have age, cool, and tagline

95
00:03:39.240 --> 00:03:43.590
being shown in there, and then we can go into our header

96
00:03:43.590 --> 00:03:45.900
and you can do a little something like this,

97
00:03:45.900 --> 00:03:48.680
where you delete the actual hard-coded values

98
00:03:48.680 --> 00:03:51.450
and when you want to use

99
00:03:51.450 --> 00:03:54.260
a variable inside of JSX,

100
00:03:54.260 --> 00:03:56.850
we just give a set of curly brackets

101
00:03:56.850 --> 00:04:00.230
and what did we say that curly brackets does in JSX?

102
00:04:00.230 --> 00:04:01.620
It says, I'm just going to go

103
00:04:01.620 --> 00:04:03.860
back to Javascript for a quick second

104
00:04:03.860 --> 00:04:05.950
and that's why, because we need to be

105
00:04:05.950 --> 00:04:07.930
able to use Javascript variables here.

106
00:04:07.930 --> 00:04:09.810
And the way that you can reference it is

107
00:04:09.810 --> 00:04:13.120
this.props.tagline,

108
00:04:13.120 --> 00:04:14.680
and let's go back.

109
00:04:14.680 --> 00:04:18.510
This is going to be the component instance,

110
00:04:18.510 --> 00:04:21.740
meaning that whatever got passed in when it was used

111
00:04:21.740 --> 00:04:24.670
in our case this is a component instance,

112
00:04:24.670 --> 00:04:26.574
you could have many of them

113
00:04:26.574 --> 00:04:30.550
then, .props is going to be an object inside of

114
00:04:30.550 --> 00:04:33.580
the component which contains all of our

115
00:04:33.580 --> 00:04:37.180
final properties so tagline, age, cool.

116
00:04:37.180 --> 00:04:38.730
Now if I give that a refresh,

117
00:04:38.730 --> 00:04:40.930
Wes Is Cool is showing up, why?

118
00:04:40.930 --> 00:04:43.160
Because I've passed it in right here

119
00:04:43.160 --> 00:04:46.940
and I could just say something like Catch of the day,

120
00:04:46.940 --> 00:04:49.350
refresh, it's going to automatically update it

121
00:04:49.350 --> 00:04:53.060
so let's change that back to Fresh Seafood Market.

122
00:04:53.060 --> 00:04:54.840
That's going to be really helpful because

123
00:04:54.840 --> 00:04:57.910
that is ultimately how

124
00:04:57.910 --> 00:05:01.650
data is going to get into our actual application.

125
00:05:01.650 --> 00:05:05.690
So I'm going to go ahead and remove this age and cool

126
00:05:06.530 --> 00:05:10.810
and we are just going to be passing in the header tagline.

127
00:05:10.810 --> 00:05:12.900
One other thing I want to show you in the React dev tools

128
00:05:12.900 --> 00:05:14.810
right now is the dollar r trek

129
00:05:14.810 --> 00:05:16.660
so if we go back to our header here

130
00:05:16.660 --> 00:05:18.140
you may be a little confused about like

131
00:05:18.140 --> 00:05:20.039
what is this, right?

132
00:05:20.039 --> 00:05:21.940
And what's neat about that is

133
00:05:21.940 --> 00:05:24.500
if you go into React dev tools, and you open it up,

134
00:05:24.500 --> 00:05:27.210
and you click on any component that you have,

135
00:05:27.210 --> 00:05:29.490
it's going to say equals equals dollar r

136
00:05:29.490 --> 00:05:31.460
and now, what does that mean?

137
00:05:31.460 --> 00:05:33.760
Well, let me rewind real quick

138
00:05:33.760 --> 00:05:35.460
and show you about dollar zero.

139
00:05:35.460 --> 00:05:39.070
So React aside, in most dev tools,

140
00:05:39.070 --> 00:05:41.760
Firefox and Chrome, and I'm assuming the other ones,

141
00:05:41.760 --> 00:05:44.840
if you want to be able to select an element,

142
00:05:44.840 --> 00:05:49.410
like let's say I have, let's find something in here,

143
00:05:49.410 --> 00:05:53.720
menu, header, like let's say I wanted to select this H1

144
00:05:53.720 --> 00:05:55.090
it tells you it's dollar zero.

145
00:05:55.090 --> 00:05:58.990
So when you click something in Chrome dev tools,

146
00:05:58.990 --> 00:06:02.550
you can go to the console and type in dollar zero,

147
00:06:02.550 --> 00:06:05.520
and what that will do is it will show you

148
00:06:05.520 --> 00:06:07.890
whatever it is that you have clicked in here.

149
00:06:07.890 --> 00:06:11.370
So if I click on H3, and I run that dollar zero again,

150
00:06:11.370 --> 00:06:13.760
it's going to show me that I have selected that

151
00:06:13.760 --> 00:06:15.400
and that's great because it's a little short cut.

152
00:06:15.400 --> 00:06:17.860
You don't have to select it for yourself.

153
00:06:17.860 --> 00:06:20.475
Also, dollar one will show you the second last thing

154
00:06:20.475 --> 00:06:23.590
that you clicked and dollar two will show you

155
00:06:23.590 --> 00:06:25.080
the third last thing that you clicked,

156
00:06:25.080 --> 00:06:26.410
and so on and so on, so,

157
00:06:26.410 --> 00:06:27.910
that can be helpful in the dev tools.

158
00:06:27.910 --> 00:06:31.860
Now in React dev tools, we also have this dollar r

159
00:06:31.860 --> 00:06:34.530
so if I click on my header component,

160
00:06:34.530 --> 00:06:36.580
and then go over to my console,

161
00:06:36.580 --> 00:06:40.080
and type in dollar r, it's going to show us

162
00:06:40.080 --> 00:06:42.220
the component instance that we have.

163
00:06:42.220 --> 00:06:44.240
You can open that up and you'll see

164
00:06:44.240 --> 00:06:46.380
that we have everything that is available

165
00:06:46.380 --> 00:06:48.570
and this was a big aha moment for me in React

166
00:06:48.570 --> 00:06:51.940
because I was like oh, this whole component thing?

167
00:06:51.940 --> 00:06:54.730
It's just an object and it has some stuff in here

168
00:06:54.730 --> 00:06:57.950
that we don't necessarily care about like the updater

169
00:06:57.950 --> 00:07:00.600
and internal instance and whatnot but

170
00:07:00.600 --> 00:07:03.280
we do care about this props object inside of there.

171
00:07:03.280 --> 00:07:07.640
So this is that, is a dollar r.props.tagline

172
00:07:07.640 --> 00:07:09.830
and if we were to have multiple instances

173
00:07:09.830 --> 00:07:12.700
of that header tag, so let me duplicate it,

174
00:07:12.700 --> 00:07:16.120
first one is Fresh Seafood Market

175
00:07:16.120 --> 00:07:18.010
second one is Wes Is Cool

176
00:07:19.610 --> 00:07:21.410
give that a save, now it's just going to render out

177
00:07:21.410 --> 00:07:23.170
two different header tags for us

178
00:07:23.170 --> 00:07:24.590
with the difference being that

179
00:07:24.590 --> 00:07:26.230
each of them has its own props

180
00:07:26.230 --> 00:07:27.950
and that's what I mean by instance.

181
00:07:27.950 --> 00:07:30.370
This is always going to be equal to that instance

182
00:07:30.370 --> 00:07:32.060
and then when I have clicked this one,

183
00:07:32.060 --> 00:07:34.380
this is going to be equal to the second one.

184
00:07:34.380 --> 00:07:37.860
So that's what you need to know about this

185
00:07:37.860 --> 00:07:40.510
and that dollar r is going to be really helpful

186
00:07:40.510 --> 00:07:43.250
for when we get moving in.

187
00:07:43.250 --> 00:07:44.620
Finally, I'll just talk about these little

188
00:07:44.620 --> 00:07:46.900
warnings that you have popping up in the dev tools

189
00:07:46.900 --> 00:07:50.440
So these are warnings, red ones are errors,

190
00:07:50.440 --> 00:07:54.030
generally the yellow warnings are nothing to sweat about,

191
00:07:54.030 --> 00:07:58.130
but create React app does run this thing called ESLint,

192
00:07:58.130 --> 00:08:00.940
and it sort of does like little code quality checks on you

193
00:08:00.940 --> 00:08:03.470
and if you're doing something that could be cleaned up,

194
00:08:03.470 --> 00:08:05.790
or could potentially cause a problem for you,

195
00:08:05.790 --> 00:08:06.883
it's going to tell you.

196
00:08:06.883 --> 00:08:10.920
In our case, if we go into our index.js

197
00:08:10.920 --> 00:08:14.180
it's telling us that we have the StorePicker component

198
00:08:14.180 --> 00:08:16.930
but we're not using it anywhere on the page

199
00:08:16.930 --> 00:08:19.380
so it's like hey, why are you importing this

200
00:08:19.380 --> 00:08:21.120
if you're not using it anywhere on the page

201
00:08:21.120 --> 00:08:23.560
and we are going to be using it in just a couple videos,

202
00:08:23.560 --> 00:08:25.910
so I'm going to ignore that just for now.

