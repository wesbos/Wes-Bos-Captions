WEBVTT

1
00:00:00.577 --> 00:00:03.244
(upbeat music)

2
00:00:07.040 --> 00:00:08.740
<v Wes>If you've ever tried to write HTML</v>

3
00:00:08.740 --> 00:00:11.310
inside of JavaScript you'll know that it's really

4
00:00:11.310 --> 00:00:13.169
just a pain in the ass.

5
00:00:13.169 --> 00:00:14.794
So what you'd have to do is you'd have

6
00:00:14.794 --> 00:00:16.840
a paragraph tag and then if you want something inside of it

7
00:00:16.840 --> 00:00:19.201
you have to close your quotes and you'd have to

8
00:00:19.201 --> 00:00:21.490
have to concatenate in a variable inside of it

9
00:00:21.490 --> 00:00:24.340
and you inevitably forget one of the pluses

10
00:00:24.340 --> 00:00:26.390
and the whole thing will be broken.

11
00:00:26.390 --> 00:00:30.170
And it's a little bit easier now where in ES6

12
00:00:30.170 --> 00:00:32.410
you could do something with a paragraph tag

13
00:00:32.410 --> 00:00:35.048
and you can, inside of that you can put

14
00:00:35.048 --> 00:00:37.210
a variable name and that's fine.

15
00:00:37.210 --> 00:00:39.750
However, in React there's this thing called JSX

16
00:00:39.750 --> 00:00:42.690
which allows us to just mix using JavaScript

17
00:00:42.690 --> 00:00:47.570
and the HTML that we love and know and that is called a JSX.

18
00:00:47.570 --> 00:00:49.580
So I'm gonna show you how to use it.

19
00:00:49.580 --> 00:00:51.630
And actually I should say that JSX

20
00:00:51.630 --> 00:00:54.660
is not required to write a React application,

21
00:00:54.660 --> 00:00:56.870
however I would say most React developers

22
00:00:56.870 --> 00:00:57.703
go ahead and use it.

23
00:00:57.703 --> 00:01:01.220
The alternative to not using JSX,

24
00:01:01.220 --> 00:01:04.220
which looks like this, is to, maybe I had

25
00:01:04.220 --> 00:01:07.840
a paragraph with a class of hey,

26
00:01:07.840 --> 00:01:11.140
instead of using that I could return React

27
00:01:11.140 --> 00:01:14.920
dot create element and we wanna create a paragraph tag

28
00:01:14.920 --> 00:01:17.470
with some attributes, we want the class name

29
00:01:17.470 --> 00:01:21.440
to be hey and the value to be heyyyooo

30
00:01:22.690 --> 00:01:25.240
and if I give that a save you'll see that we render out

31
00:01:25.240 --> 00:01:28.390
heyyyooo here and that is rendered out to a React element.

32
00:01:28.390 --> 00:01:31.290
However, that's as we say, that's no way to live

33
00:01:31.290 --> 00:01:33.110
your life because as soon as you start

34
00:01:33.110 --> 00:01:36.480
getting into nested elements then you have to nest

35
00:01:36.480 --> 00:01:39.000
a React dot create element inside of here

36
00:01:39.000 --> 00:01:41.430
and before you know it you're just weeping in the corner

37
00:01:41.430 --> 00:01:42.780
because that's really hard to write.

38
00:01:42.780 --> 00:01:45.304
So, we wanna swap that out with just using

39
00:01:45.304 --> 00:01:48.085
regular HTML that we love and know.

40
00:01:48.085 --> 00:01:50.910
Except there's a couple gotchas and we're gonna go through

41
00:01:50.910 --> 00:01:52.180
what they all are now.

42
00:01:52.180 --> 00:01:55.850
So, first thing we want to do is if we have

43
00:01:55.850 --> 00:01:58.220
a form tag, I'm gonna go ahead and do that,

44
00:01:58.220 --> 00:02:00.640
you give your form there, and you wanna give it

45
00:02:00.640 --> 00:02:03.317
a class, you can't just use regular class

46
00:02:03.317 --> 00:02:07.710
of store selector, and you're gonna see here,

47
00:02:08.914 --> 00:02:11.160
warning, invalid DOM property class,

48
00:02:11.160 --> 00:02:12.270
did you mean class name?

49
00:02:12.270 --> 00:02:15.480
So when you want to add a class for CSS purposes

50
00:02:15.480 --> 00:02:18.250
you have to put a class name on it

51
00:02:18.250 --> 00:02:20.060
and that will get you up and running.

52
00:02:20.060 --> 00:02:22.860
I recommend using Emmet, which is probably

53
00:02:22.860 --> 00:02:25.750
what you're seeing me here, I just type form

54
00:02:25.750 --> 00:02:28.796
dot store selector and hit tab

55
00:02:28.796 --> 00:02:31.410
and that will automatically auto complete me

56
00:02:31.410 --> 00:02:33.910
and it will detect that I'm not in regular HTML,

57
00:02:33.910 --> 00:02:37.650
but I'm in JSX and it will use class name instead of class.

58
00:02:37.650 --> 00:02:39.490
So if you're interested in how to get that work

59
00:02:39.490 --> 00:02:41.250
for your editor I have some blog posts,

60
00:02:41.250 --> 00:02:45.350
just search Wes Bos React Emmet

61
00:02:45.350 --> 00:02:48.120
and it will give you what you want.

62
00:02:48.120 --> 00:02:50.320
The other that we need to know about this

63
00:02:50.320 --> 00:02:53.740
is if you are returning multiple lines,

64
00:02:53.740 --> 00:02:55.610
so for example I have this form here

65
00:02:55.610 --> 00:02:58.071
and inside of that let's give ourselves

66
00:02:58.071 --> 00:03:01.780
an H2 tag that says, please enter a store.

67
00:03:01.780 --> 00:03:05.130
What this does is it's actually going to work just fine,

68
00:03:05.130 --> 00:03:07.560
see please enter a store, we have the form tag.

69
00:03:07.560 --> 00:03:09.750
However, it's not indented properly

70
00:03:09.750 --> 00:03:12.070
and that, I don't know about you, but that really bugs me.

71
00:03:12.070 --> 00:03:14.672
So, well you might think, okay, I'll just do this,

72
00:03:14.672 --> 00:03:17.090
I'll just put it on its own line.

73
00:03:17.090 --> 00:03:19.710
But JavaScript has this handy little feature

74
00:03:19.710 --> 00:03:23.510
where it'll break and the handy feature

75
00:03:23.510 --> 00:03:27.340
is called ASI, automatic semicolon insertion

76
00:03:27.340 --> 00:03:29.911
and it'll say, return, oh, you forgot a semicolon

77
00:03:29.911 --> 00:03:32.660
and it will return nothing.

78
00:03:32.660 --> 00:03:35.160
So what I like to do, and this is what a lot of people do,

79
00:03:35.160 --> 00:03:37.740
is you just return a pair of parentheses

80
00:03:37.740 --> 00:03:40.600
and then put your HTML inside of that

81
00:03:40.600 --> 00:03:45.490
and good old BEDMAS, brackets, exponents, division,

82
00:03:45.490 --> 00:03:48.410
you get the point, it will return the,

83
00:03:48.410 --> 00:03:50.460
it will run the code in the parentheses first

84
00:03:50.460 --> 00:03:53.985
and you're able to just return parentheses and a form tag.

85
00:03:53.985 --> 00:03:56.110
If you're net to JavaScript, make sure

86
00:03:56.110 --> 00:03:58.750
that you're not doing this, which is return is not

87
00:03:58.750 --> 00:04:01.561
a function, it's a keyword and then we're returning

88
00:04:01.561 --> 00:04:05.210
whatever is inside of the parentheses.

89
00:04:05.210 --> 00:04:08.340
A couple other things we need to know about JSX

90
00:04:08.340 --> 00:04:12.200
and the other one is that you cannot return

91
00:04:12.200 --> 00:04:13.640
what's called sibling elements.

92
00:04:13.640 --> 00:04:16.290
So above the form tag if I wanted to return

93
00:04:16.290 --> 00:04:19.352
a paragraph tag that says fish and give that a save,

94
00:04:19.352 --> 00:04:22.220
it's gonna yell at me and it's going to say,

95
00:04:22.220 --> 00:04:25.010
failed to compile adjacent JSX elements

96
00:04:25.010 --> 00:04:27.260
must be wrapped in a closing tag.

97
00:04:27.260 --> 00:04:29.750
And that is because from a render method

98
00:04:29.750 --> 00:04:32.910
you can only ever return one element.

99
00:04:32.910 --> 00:04:35.070
You can put as many elements inside of the parent

100
00:04:35.070 --> 00:04:37.090
element as you want, you just can't like,

101
00:04:37.090 --> 00:04:39.540
if I put the paragraph inside of there it works just fine,

102
00:04:39.540 --> 00:04:42.150
you just can't return sibling elements.

103
00:04:42.150 --> 00:04:45.270
So that could be a problem, especially if you're using

104
00:04:45.270 --> 00:04:47.972
a flex box or CSS grid where you need to return

105
00:04:47.972 --> 00:04:51.982
six or seven children with no wrapper.

106
00:04:51.982 --> 00:04:54.580
The solution to that, and this is brand new

107
00:04:54.580 --> 00:04:59.580
in React 16.2, is you can wrap them in a React

108
00:04:59.710 --> 00:05:04.710
dot fragment tag and then put this inside of there

109
00:05:05.430 --> 00:05:08.100
and then that allows us to do things like

110
00:05:08.100 --> 00:05:09.830
put our paragraph tag inside of it,

111
00:05:09.830 --> 00:05:12.960
you can return as many adjacent elements as you want

112
00:05:12.960 --> 00:05:15.860
and that React fragment tag is going to render

113
00:05:15.860 --> 00:05:16.860
out to nothing.

114
00:05:16.860 --> 00:05:19.040
Let me show you what I mean by that.

115
00:05:19.040 --> 00:05:22.010
If we open it up, open up our store picker,

116
00:05:22.010 --> 00:05:23.650
you see that it just renders out

117
00:05:23.650 --> 00:05:25.780
just a paragraph tag and a form tag.

118
00:05:25.780 --> 00:05:28.536
Previously what you had to do is just render out

119
00:05:28.536 --> 00:05:31.620
a dummy div and then that gave you all these

120
00:05:31.620 --> 00:05:33.930
extra unnecessary divs in your markup

121
00:05:33.930 --> 00:05:36.060
which can really goof up your CSS

122
00:05:36.060 --> 00:05:38.150
if you're using any sort of flex box or grid.

123
00:05:38.150 --> 00:05:41.650
So React fragment is what you want.

124
00:05:41.650 --> 00:05:44.130
It is coming soon where we'll be able

125
00:05:44.130 --> 00:05:47.140
to do something like this where you just render out

126
00:05:47.140 --> 00:05:50.210
blank tags and blank closing tags,

127
00:05:50.210 --> 00:05:53.790
however it is currently not in the Babel version

128
00:05:53.790 --> 00:05:58.090
that create your React app supports, so it won't work.

129
00:05:58.090 --> 00:06:01.740
So the easiest way is to render out React dot fragment

130
00:06:01.740 --> 00:06:04.810
or you can also import it like this,

131
00:06:06.118 --> 00:06:11.118
fragment and then you can just render out a fragment tag

132
00:06:11.360 --> 00:06:12.960
and that will do the exact same thing.

133
00:06:12.960 --> 00:06:14.980
So put that in your back pocket

134
00:06:14.980 --> 00:06:16.770
because you're going to need it.

135
00:06:16.770 --> 00:06:20.070
Another thing you need to know about is commenting in JSX

136
00:06:20.070 --> 00:06:23.244
does not look like commenting in regular React.

137
00:06:23.244 --> 00:06:26.460
What we actually need to do for comments

138
00:06:26.460 --> 00:06:29.110
is use curly brackets and JavaScript comments.

139
00:06:29.110 --> 00:06:31.680
So, inside of here if I wanted to leave myself

140
00:06:31.680 --> 00:06:34.610
a comment I would give myself a set of curly brackets

141
00:06:34.610 --> 00:06:37.131
and curly brackets in JSX means

142
00:06:37.131 --> 00:06:41.230
I'm doing some JavaScript, and we'll go

143
00:06:41.230 --> 00:06:43.430
much more into this, but that notes

144
00:06:43.430 --> 00:06:48.040
to JSX that I'm gonna hop back into JavaScript land

145
00:06:48.040 --> 00:06:51.180
for a quick second and maybe set a variable,

146
00:06:51.180 --> 00:06:53.630
maybe do a calculation, in our case

147
00:06:53.630 --> 00:06:57.340
we're just going to do a comment which is this.

148
00:06:58.430 --> 00:06:59.820
And it'll look like that.

149
00:06:59.820 --> 00:07:04.070
So there is no regular HTML comments like that

150
00:07:04.070 --> 00:07:07.900
or there is no just forward slash, forward slash comments

151
00:07:07.900 --> 00:07:10.410
because that will comment out the closing bracket.

152
00:07:10.410 --> 00:07:13.473
So you must use a block comment in JavaScript

153
00:07:13.473 --> 00:07:16.960
and most editors, VS Code, will know

154
00:07:16.960 --> 00:07:20.730
that you're in React JSX code and it'll hook up

155
00:07:20.730 --> 00:07:23.130
your command forward slash to just automatically

156
00:07:23.130 --> 00:07:24.830
toggle those comments on and off.

157
00:07:24.830 --> 00:07:27.189
So it's not too much of an issue,

158
00:07:27.189 --> 00:07:29.710
you just have to remember those things.

159
00:07:29.710 --> 00:07:32.170
One other things is, don't put a comment above here,

160
00:07:32.170 --> 00:07:33.640
that's going to give you the same issue

161
00:07:33.640 --> 00:07:38.180
that we had where if you are, I've wasted many hours

162
00:07:38.180 --> 00:07:41.198
on this before I wrote myself a little comment

163
00:07:41.198 --> 00:07:44.129
like this is a store picker, and it tells you,

164
00:07:44.129 --> 00:07:49.129
syntax error, unexpected token, comma, what.

165
00:07:49.400 --> 00:07:52.720
And I finally realized that it was that whole

166
00:07:52.720 --> 00:07:54.260
adjacent JSX selector.

167
00:07:54.260 --> 00:07:56.060
The error message doesn't tell you that,

168
00:07:56.060 --> 00:07:59.154
but you cannot return both a comment

169
00:07:59.154 --> 00:08:02.790
and an element, if you want to have a comment

170
00:08:02.790 --> 00:08:05.840
you must put it inside of your returned element.

171
00:08:05.840 --> 00:08:09.570
Whether that's a fragment or a regular div tag

172
00:08:09.570 --> 00:08:11.200
or a form tag in our case,

173
00:08:11.200 --> 00:08:12.440
and that will get you up and running.

174
00:08:12.440 --> 00:08:15.020
So, let's get rid of that form,

175
00:08:15.020 --> 00:08:18.110
we'll get our H2 tag, we also need an input

176
00:08:18.110 --> 00:08:20.300
with the type of text.

177
00:08:20.300 --> 00:08:22.120
We want a required attribute on there

178
00:08:22.120 --> 00:08:25.614
and we'll have a placeholder which is enter

179
00:08:25.614 --> 00:08:30.137
or store name and then we'll have a button

180
00:08:30.137 --> 00:08:34.810
with the type of submit and then inside of that

181
00:08:34.810 --> 00:08:39.810
we will say, visit store, put a little arrow there.

182
00:08:41.890 --> 00:08:45.080
Good, it's not styled yet, but we're gonna get into that

183
00:08:45.080 --> 00:08:47.310
in the next video, you should see it being rendered out.

184
00:08:47.310 --> 00:08:50.889
If we look at our elements panel, it's just regular,

185
00:08:50.889 --> 00:08:53.600
let's open it up here, it's just the div, the main

186
00:08:53.600 --> 00:08:55.810
and a form in all of our regular elements,

187
00:08:55.810 --> 00:08:57.810
but if we look at it in our React dev tools

188
00:08:57.810 --> 00:09:01.150
as React sees it, it's simply just a store picker component

189
00:09:01.150 --> 00:09:03.909
which we could use all throughout our application.

190
00:09:03.909 --> 00:09:06.076
(mumbles)

191
00:09:09.847 --> 00:09:11.850
Now if you click on that, it's actually not

192
00:09:11.850 --> 00:09:14.190
going to do anything, that's because we have not

193
00:09:14.190 --> 00:09:16.570
hooked up the events just yet, but we will

194
00:09:16.570 --> 00:09:18.880
be coming to that in a very soon video as well.

195
00:09:18.880 --> 00:09:20.080
See you in the next one.

