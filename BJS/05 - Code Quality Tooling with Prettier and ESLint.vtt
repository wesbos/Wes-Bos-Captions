WEBVTT

1
00:00:01.255 --> 00:00:03.838
(upbeat music)

2
00:00:05.374 --> 00:00:06.440
<v ->[Instructor - Wes] So there are two tools</v>

3
00:00:06.440 --> 00:00:08.610
that are extremely helpful in code quality

4
00:00:08.610 --> 00:00:11.080
and formatting of your JavaScript.

5
00:00:11.080 --> 00:00:12.691
Whether you're a solo developer

6
00:00:12.691 --> 00:00:15.560
looking to write best practices,

7
00:00:15.560 --> 00:00:17.550
looking to catch potential bugs,

8
00:00:17.550 --> 00:00:19.450
and also just not to worry

9
00:00:19.450 --> 00:00:21.120
about formatting of your JavaScript,

10
00:00:21.120 --> 00:00:22.980
or if you're on a team where,

11
00:00:22.980 --> 00:00:25.287
often you join a team and your team says,

12
00:00:25.287 --> 00:00:27.410
"This is the way we write our JavaScript."

13
00:00:27.410 --> 00:00:29.670
Let me just take a look at some JavaScript here.

14
00:00:29.670 --> 00:00:31.600
So, the fact that he used single quotes

15
00:00:31.600 --> 00:00:32.450
versus double quotes.

16
00:00:32.450 --> 00:00:33.283
So, let's talk about that,

17
00:00:33.283 --> 00:00:35.230
but that's an opinion that people have.

18
00:00:35.230 --> 00:00:38.680
The fact that it put a space here is actually not necessary.

19
00:00:38.680 --> 00:00:41.950
That's an opinion that people have in their JavaScript.

20
00:00:41.950 --> 00:00:43.900
So, there's all these kind of things

21
00:00:43.900 --> 00:00:47.290
that are either going to cause potential issues

22
00:00:47.290 --> 00:00:49.560
in your code or are just sort of like

23
00:00:49.560 --> 00:00:53.300
formatting that people have opinions about.

24
00:00:53.300 --> 00:00:56.170
These tools are going to sort of take the guess work

25
00:00:56.170 --> 00:01:00.070
and the fighting and the bickering over these things

26
00:01:00.070 --> 00:01:01.590
and either just fix it for you

27
00:01:01.590 --> 00:01:03.750
or alert you when you're doing something

28
00:01:03.750 --> 00:01:06.500
that is potentially a bad practice

29
00:01:06.500 --> 00:01:09.000
or has an accessibility issue and what not.

30
00:01:09.000 --> 00:01:10.680
So, we're going to look at the two tools.

31
00:01:10.680 --> 00:01:12.380
The first one is called ESLint,

32
00:01:12.380 --> 00:01:14.690
second one is called Prettier.

33
00:01:14.690 --> 00:01:17.340
Recommend that you open up ESLint,

34
00:01:17.340 --> 00:01:20.690
go to ESLint.org and go to the demo

35
00:01:20.690 --> 00:01:23.610
and then Prettier there's a link on the homepage

36
00:01:23.610 --> 00:01:24.785
that says, "try it".

37
00:01:24.785 --> 00:01:27.690
And we're going to sorta go through explain what they are,

38
00:01:27.690 --> 00:01:30.030
how they work, and then I'm going to step you through

39
00:01:30.030 --> 00:01:32.040
actually installing them for yourself.

40
00:01:32.040 --> 00:01:35.855
So, first thing ESLint is a JavaScript linter tool,

41
00:01:35.855 --> 00:01:37.870
for identifying and reporting

42
00:01:37.870 --> 00:01:39.810
potential issues in your JavaScript.

43
00:01:39.810 --> 00:01:43.190
So, some examples might be bad practices

44
00:01:43.190 --> 00:01:47.255
or design patterns, or identifying unused variables

45
00:01:47.255 --> 00:01:51.023
or functions. Actually, if you go the ESLint,

46
00:01:51.023 --> 00:01:53.870
I think I've got to flip mine over

47
00:01:53.870 --> 00:01:56.400
to the latest version of JavaScript.

48
00:01:56.400 --> 00:02:01.400
Just go ahead go to rules, config, and flip that on to 2019

49
00:02:01.800 --> 00:02:03.503
or whatever the latest version is available

50
00:02:03.503 --> 00:02:05.830
at the time of you watching this.

51
00:02:05.830 --> 00:02:09.840
And if I just say like const age is equal to a hundred and..

52
00:02:11.123 --> 00:02:15.683
First here it's saying unexpected token age, why is that?

53
00:02:25.660 --> 00:02:28.971
And I just say like const age,

54
00:02:28.971 --> 00:02:30.916
lets see we'll do a hundred

55
00:02:30.916 --> 00:02:34.340
and now it's telling me my first linting error here.

56
00:02:34.340 --> 00:02:37.650
It says "age is assigned a value but never used".

57
00:02:37.650 --> 00:02:40.523
Okay. So if I were to go ahead and use it,

58
00:02:41.520 --> 00:02:43.210
then that should go away.

59
00:02:43.210 --> 00:02:44.043
There you go,

60
00:02:44.043 --> 00:02:47.350
and now it's telling me unexpected console statement.

61
00:02:47.350 --> 00:02:49.450
So, one of the rules that they have here is

62
00:02:49.450 --> 00:02:51.310
don't use console dot log,

63
00:02:51.310 --> 00:02:53.290
and that would be a rule for production,

64
00:02:53.290 --> 00:02:55.150
because you shouldn't be leaving these in

65
00:02:55.150 --> 00:02:58.096
when your deploy your code to actual things.

66
00:02:58.096 --> 00:03:00.140
You can turn these rules on and off,

67
00:03:00.140 --> 00:03:01.460
don't worry we can config them.

68
00:03:01.460 --> 00:03:03.079
I'm going to show you my own config,

69
00:03:03.079 --> 00:03:05.730
and the here it's telling me console is not defined.

70
00:03:05.730 --> 00:03:09.200
You can actually look at the rules that you have here.

71
00:03:09.200 --> 00:03:11.735
You can turn on, enable all environments.

72
00:03:11.735 --> 00:03:15.738
These are all the different possible rules.

73
00:03:15.738 --> 00:03:18.730
What I like about this is as you write your code,

74
00:03:18.730 --> 00:03:21.920
it's going to tell you what the error is

75
00:03:21.920 --> 00:03:22.927
and you may look at that and be like,

76
00:03:22.927 --> 00:03:25.150
"What's, what's, well what's wrong with that?"

77
00:03:25.150 --> 00:03:28.175
Well you can click the rule and then you can go through

78
00:03:28.175 --> 00:03:32.320
and sort of read, why this rule is here

79
00:03:32.320 --> 00:03:33.630
and sort of the opinion

80
00:03:33.630 --> 00:03:35.975
and whether you want to turn it off or turn it on.

81
00:03:35.975 --> 00:03:38.299
Depending on where you're at.

82
00:03:38.299 --> 00:03:40.303
That's what ESLint is.

83
00:03:44.390 --> 00:03:48.130
So, some other thing broken or confusing scoping.

84
00:03:48.130 --> 00:03:52.713
So, if I were to have a function here that says hi,

85
00:03:53.610 --> 00:03:57.790
and I were to take a variable called name

86
00:03:57.790 --> 00:03:59.503
and say is equal to Wes.

87
00:04:00.370 --> 00:04:02.820
It's going to tell me hi is defined but never used

88
00:04:02.820 --> 00:04:06.010
and then read only global names should not be modified.

89
00:04:06.010 --> 00:04:07.820
So, that's another little issue

90
00:04:07.820 --> 00:04:11.373
that there's actually a global variable in here called name.

91
00:04:14.840 --> 00:04:17.160
So, if I were to make a function called hi

92
00:04:18.680 --> 00:04:23.680
and inside of that I just said like age is equal to 200.

93
00:04:23.800 --> 00:04:26.820
Now it's telling me I made a function called hi

94
00:04:26.820 --> 00:04:30.710
and there's an age variable that I've not yet defined,

95
00:04:30.710 --> 00:04:34.020
so it could maybe go ahead and put let in front of that.

96
00:04:34.020 --> 00:04:37.140
Now it's telling me hi is not defined.

97
00:04:37.140 --> 00:04:38.120
So, maybe I can run it

98
00:04:38.120 --> 00:04:40.650
and don't worry we haven't done what functions are just yet.

99
00:04:40.650 --> 00:04:43.840
Now it's saying age is assigned, but never used.

100
00:04:43.840 --> 00:04:46.523
So lets console.log the age.

101
00:04:47.560 --> 00:04:49.320
Now it's going to tell me there's no console

102
00:04:49.320 --> 00:04:50.880
and you can click through to that.

103
00:04:50.880 --> 00:04:53.120
So, it's always going to be giving you feedback

104
00:04:53.120 --> 00:04:53.953
on your code,

105
00:04:53.953 --> 00:04:56.630
and initially it's going to be extremely frustrating

106
00:04:56.630 --> 00:04:58.588
because it tells you all of your code is wrong

107
00:04:58.588 --> 00:05:02.800
and over time you sort of will be able to modify

108
00:05:02.800 --> 00:05:05.440
your own config that fits your own coding style

109
00:05:05.440 --> 00:05:08.517
as well as wise up to why some of these things

110
00:05:08.517 --> 00:05:11.913
may be necessarily bad practices in what not.

111
00:05:18.780 --> 00:05:20.420
ESLint is also pluggable

112
00:05:20.420 --> 00:05:22.521
which means that you can have different

113
00:05:22.521 --> 00:05:23.354
sort of plug ins for it.

114
00:05:23.354 --> 00:05:25.400
There's many for different styles of JavaScript.

115
00:05:25.400 --> 00:05:27.430
Different things, like you can get a view plugin,

116
00:05:27.430 --> 00:05:30.380
you can get a react plugin, you can get an angular plugin.

117
00:05:30.380 --> 00:05:32.601
For so, whatever sort of flavor of JavaScript

118
00:05:32.601 --> 00:05:35.940
you end up writing, you can get a plugin for that.

119
00:05:35.940 --> 00:05:38.470
So, that's sort of a high level of what ESLint is.

120
00:05:38.470 --> 00:05:40.720
We'll talk a little bit more about configuring it,

121
00:05:40.720 --> 00:05:42.457
errors, and warnings in just a second.

122
00:05:42.457 --> 00:05:45.160
The next tool that we have here is Prettier.

123
00:05:45.160 --> 00:05:48.030
So, whereas ESLint will yell at you

124
00:05:48.030 --> 00:05:53.030
for things that are causing potential issues with your code.

125
00:05:53.280 --> 00:05:57.010
Prettier is entirely for formatting of your code.

126
00:05:57.010 --> 00:05:59.077
So, I've got some code here.

127
00:05:59.077 --> 00:06:00.450
I'm going to bump this up here.

128
00:06:00.450 --> 00:06:04.740
And let's say I like to put lot's of spaces in my code.

129
00:06:04.740 --> 00:06:07.900
That's actually, technically a valid JavaScript.

130
00:06:07.900 --> 00:06:12.900
However, it looks awful or when people call a function,

131
00:06:14.320 --> 00:06:16.770
like if you say alert and then a space

132
00:06:16.770 --> 00:06:19.780
and put hi there. That's technically valid JavaScript.

133
00:06:19.780 --> 00:06:22.170
Like we said earlier leaving the semicolons off,

134
00:06:22.170 --> 00:06:24.108
that's technically valid JavaScript.

135
00:06:24.108 --> 00:06:26.870
These are sort of annoying things.

136
00:06:26.870 --> 00:06:28.730
Even like with the indentation.

137
00:06:28.730 --> 00:06:31.220
You've all met some one who is just awful

138
00:06:31.220 --> 00:06:32.310
at indenting their code,

139
00:06:32.310 --> 00:06:34.540
and you look at it and it's just the dogs breakfast.

140
00:06:34.540 --> 00:06:36.650
So, what prettier will do

141
00:06:36.650 --> 00:06:38.630
it will sort of take in all of your code,

142
00:06:38.630 --> 00:06:41.492
if you're like mixing your quotes.

143
00:06:41.492 --> 00:06:46.492
So you have alert hi there and alert double quotes here.

144
00:06:47.140 --> 00:06:48.370
We'll talk about the difference between

145
00:06:48.370 --> 00:06:49.968
single and double and back text art.

146
00:06:49.968 --> 00:06:53.480
It will always just format them into a consistent one

147
00:06:53.480 --> 00:06:56.120
depending on the setting that you have.

148
00:06:56.120 --> 00:06:58.204
Prettier is pretty opinionated.

149
00:06:58.204 --> 00:07:01.933
There are a few settings we can toggle here or there,

150
00:07:01.933 --> 00:07:06.933
but mostly you sort of just have to let it figure out

151
00:07:07.220 --> 00:07:08.870
how you wanted to format your code.

152
00:07:08.870 --> 00:07:13.290
So, you can use ESLint and Prettier separately.

153
00:07:13.290 --> 00:07:15.420
You can pick just one of them,

154
00:07:15.420 --> 00:07:19.260
but what I like to do is use ESLint and then I use,

155
00:07:19.260 --> 00:07:22.440
like to use the Prettier plugin for ESLint

156
00:07:22.440 --> 00:07:24.940
so that all of my code goes through ESLint.

157
00:07:24.940 --> 00:07:26.680
ESLint is going to both tell me

158
00:07:26.680 --> 00:07:29.370
what is possibly wrong with my code

159
00:07:29.370 --> 00:07:32.830
and then any possible issues that ESLint is able to fix

160
00:07:32.830 --> 00:07:34.620
including the Prettier fixes.

161
00:07:34.620 --> 00:07:37.620
It will go ahead and fix those for us.

162
00:07:37.620 --> 00:07:42.370
So, sorta the thing with ESLint is you install it

163
00:07:42.370 --> 00:07:44.880
and then you spend the rest of your life configuring it up

164
00:07:44.880 --> 00:07:48.173
based on these like hundreds of possible things here.

165
00:07:49.430 --> 00:07:51.440
You can go ahead and do that

166
00:07:51.440 --> 00:07:56.030
but it's like that you want to pick somebody else's settings

167
00:07:56.030 --> 00:07:57.080
that you already like,

168
00:07:57.080 --> 00:08:00.250
and that's exactly what I've gone ahead and done.

169
00:08:00.250 --> 00:08:05.250
Is I've made a config which is a set of ESLint rules

170
00:08:05.620 --> 00:08:07.740
as well as the Prettier plug in

171
00:08:07.740 --> 00:08:09.720
that will do the formatting for you

172
00:08:09.720 --> 00:08:11.180
all bundled into one

173
00:08:11.180 --> 00:08:13.120
so that you can sort of hit the ground running

174
00:08:13.120 --> 00:08:16.360
with that config, and then as you start to develop

175
00:08:16.360 --> 00:08:19.210
your own opinions for what you like,

176
00:08:19.210 --> 00:08:21.729
you can sort of override those one by one.

177
00:08:21.729 --> 00:08:24.670
Based off like maybe you prefer to use,

178
00:08:24.670 --> 00:08:26.030
I prefer to use single quotes,

179
00:08:26.030 --> 00:08:28.481
but maybe you prefer to use double quotes.

180
00:08:28.481 --> 00:08:30.573
You can go ahead and change that.

181
00:08:31.860 --> 00:08:34.900
So, lets go in and look at how we can actually

182
00:08:34.900 --> 00:08:37.013
go ahead and install this thing.

183
00:08:37.013 --> 00:08:40.243
What I want you to do is to go into your terminal here,

184
00:08:42.570 --> 00:08:46.717
and I want you to be in the beginner JavaScript folder

185
00:08:46.717 --> 00:08:47.880
that we have here.

186
00:08:47.880 --> 00:08:50.230
SO, if you don't know where you are type p-w-d

187
00:08:50.230 --> 00:08:53.560
and make sure you are in the beginner JavaScript.

188
00:08:53.560 --> 00:08:55.260
Now there's a couple things we need to do

189
00:08:55.260 --> 00:08:58.085
before we even get going.

190
00:08:58.085 --> 00:08:59.120
Just going to go ahead

191
00:08:59.120 --> 00:09:02.120
and follow the instructions that we have here.

192
00:09:02.120 --> 00:09:06.090
You can install this globally as well as per project.

193
00:09:06.090 --> 00:09:09.350
What I do is I usually install it just globally for,

194
00:09:09.350 --> 00:09:11.737
so that all of the projects I use are covered

195
00:09:11.737 --> 00:09:14.130
and then for each individual project

196
00:09:14.130 --> 00:09:17.750
that is more than just a simple silly little demo,

197
00:09:17.750 --> 00:09:18.850
I'll install it locally.

198
00:09:18.850 --> 00:09:20.010
So, I'm going to show you how to install it

199
00:09:20.010 --> 00:09:21.830
locally per project,

200
00:09:21.830 --> 00:09:23.470
because that's the way you probably should do it

201
00:09:23.470 --> 00:09:24.550
for all of your projects.

202
00:09:24.550 --> 00:09:25.750
So, first thing is,

203
00:09:25.750 --> 00:09:27.630
if you don't already have a package json,

204
00:09:27.630 --> 00:09:29.680
create one with npm init.

205
00:09:29.680 --> 00:09:32.240
We're going to talk about npm much later in this course,

206
00:09:32.240 --> 00:09:34.287
but essentially npm allows us to download

207
00:09:34.287 --> 00:09:36.510
what are called dependencies.

208
00:09:36.510 --> 00:09:38.660
Other people's JavaScript packages

209
00:09:38.660 --> 00:09:39.900
that allow us to do things,

210
00:09:39.900 --> 00:09:41.620
and we need other peoples JavaScript packages.

211
00:09:41.620 --> 00:09:45.210
We need ESLint. We need Prettier. We need my own config.

212
00:09:45.210 --> 00:09:47.023
So in order for that to work

213
00:09:47.023 --> 00:09:50.490
we need a what's called a package dot json file

214
00:09:50.490 --> 00:09:52.000
and that's going to hold a list

215
00:09:52.000 --> 00:09:55.170
of all of the other things in JavaScript that we need.

216
00:09:55.170 --> 00:09:58.150
So, you simply just type n-p-m in it

217
00:10:00.120 --> 00:10:02.410
and you can just hit enter on that,

218
00:10:02.410 --> 00:10:05.030
enter, and you just keep hitting enter until it's done.

219
00:10:05.030 --> 00:10:08.360
Ohhhh. What's this?

220
00:10:08.360 --> 00:10:12.210
Oh that's cryption. It took everything from my read me.

221
00:10:12.210 --> 00:10:13.320
I'll take that out later.

222
00:10:13.320 --> 00:10:15.080
Okay, so that's my index.

223
00:10:15.080 --> 00:10:17.604
Don't worry to much about what's going on in here.

224
00:10:17.604 --> 00:10:19.000
Then we need to go ahead

225
00:10:19.000 --> 00:10:21.900
and install all of our dependencies for this thing

226
00:10:21.900 --> 00:10:23.420
so just go ahead

227
00:10:23.420 --> 00:10:27.420
and copy this from the ESLint config wesbos readme.

228
00:10:27.420 --> 00:10:30.203
So, just copy, paste that in there.

229
00:11:07.030 --> 00:11:08.370
After about a minute or so,

230
00:11:08.370 --> 00:11:10.750
it will go ahead and install all of your files.

231
00:11:10.750 --> 00:11:13.081
If you actually take a look at all of your file system,

232
00:11:13.081 --> 00:11:14.540
you will see

233
00:11:19.810 --> 00:11:21.347
that there is this new folder called

234
00:11:21.347 --> 00:11:23.300
"node modules" and inside of that

235
00:11:23.300 --> 00:11:24.720
is a bunch of dependencies.

236
00:11:24.720 --> 00:11:26.750
We're not going to get into what that is just yet.

237
00:11:26.750 --> 00:11:28.597
That's going to be coming in our modules

238
00:11:28.597 --> 00:11:31.030
but just for now we need to know that.

239
00:11:31.030 --> 00:11:34.070
That contains all of the sort of JavaScript

240
00:11:34.070 --> 00:11:37.090
that makes ESLint and Prettier run.

241
00:11:37.090 --> 00:11:38.970
So, that's what we have here,

242
00:11:38.970 --> 00:11:42.440
next we need to make a new file in that folder,

243
00:11:42.440 --> 00:11:47.233
beginning JavaScript called dot ESLINT R-C.

244
00:11:48.085 --> 00:11:50.250
So, this is what's called a dot file

245
00:11:50.250 --> 00:11:53.520
and sometimes your computer will hide dot files

246
00:11:53.520 --> 00:11:57.270
from you because they're sort of like invisible files

247
00:11:57.270 --> 00:12:00.110
that are only used for developers under the hood.

248
00:12:00.110 --> 00:12:03.300
However we are developers so what we can do

249
00:12:03.300 --> 00:12:05.586
is just go to your beginner JavaScript

250
00:12:05.586 --> 00:12:08.800
and just create a new file in the root.

251
00:12:08.800 --> 00:12:09.900
If you're having trouble with this,

252
00:12:09.900 --> 00:12:11.930
make sure you put it in the right folder

253
00:12:11.930 --> 00:12:15.000
and we will say ESLint r-c

254
00:12:15.980 --> 00:12:17.610
and that will then be created.

255
00:12:17.610 --> 00:12:20.410
If you have trouble seeing that file in your file system,

256
00:12:20.410 --> 00:12:23.610
just do a quick google for show hidden files mac,

257
00:12:23.610 --> 00:12:25.320
show hidden files windows

258
00:12:25.320 --> 00:12:27.925
and it will show you how to flip that on.

259
00:12:27.925 --> 00:12:29.870
Inside of your ESLint r-c

260
00:12:29.870 --> 00:12:32.650
this is where we can go ahead and put our config.

261
00:12:32.650 --> 00:12:34.370
So, the config will look like this.

262
00:12:34.370 --> 00:12:35.680
It's just and object.

263
00:12:35.680 --> 00:12:38.230
Which we don't know what that is yet, but we will.

264
00:12:38.230 --> 00:12:40.650
You will see that it extends wesbos.

265
00:12:40.650 --> 00:12:42.890
Meaning that it's going to extend

266
00:12:42.890 --> 00:12:44.330
all of the setting and plugins

267
00:12:44.330 --> 00:12:46.980
that I've packed into my own config

268
00:12:46.980 --> 00:12:49.193
and that's really all we need right now.

269
00:12:50.720 --> 00:12:52.170
Next, what we have here,

270
00:12:52.170 --> 00:12:54.270
I'm showing you how to add mpn scripts.

271
00:12:54.270 --> 00:12:56.309
That's much more involved that what we have.

272
00:12:56.309 --> 00:12:59.653
What we want to do it get it running with VS Code.

273
00:13:00.510 --> 00:13:02.490
So, what I like to do is

274
00:13:02.490 --> 00:13:05.260
scroll down to here to say with VS Code.

275
00:13:05.260 --> 00:13:06.150
First thing you need to do

276
00:13:06.150 --> 00:13:09.820
is install the ESLint package for...

277
00:13:14.760 --> 00:13:15.593
First thing you need to do

278
00:13:15.593 --> 00:13:18.530
is install ESLint package for VS Code.

279
00:13:18.530 --> 00:13:21.273
So, I think it is command shift.

280
00:13:22.280 --> 00:13:25.810
Yeah, command shift X or control shift X

281
00:13:25.810 --> 00:13:29.880
will get you to the list of extensions in VS Code,

282
00:13:29.880 --> 00:13:32.220
and then there you can search for EXLint

283
00:13:33.500 --> 00:13:35.003
and you're going to see

284
00:13:35.003 --> 00:13:37.590
a whole bunch of the different ones that we have here,

285
00:13:37.590 --> 00:13:39.900
but the one that you want is just called ESLint.

286
00:13:39.900 --> 00:13:41.140
You will know that its the right one

287
00:13:41.140 --> 00:13:42.820
because is has a billion installs.

288
00:13:42.820 --> 00:13:45.330
Let me go ahead and click on install.

289
00:13:45.330 --> 00:13:48.453
Obviously, I've already done that myself.

290
00:13:49.830 --> 00:13:54.830
Now what we need to do is set up some VS Code settings

291
00:13:55.380 --> 00:13:57.280
and this is if you go to

292
00:14:07.640 --> 00:14:08.503
file.

293
00:14:33.760 --> 00:14:36.520
So we go to the top right hand corner

294
00:14:36.520 --> 00:14:38.250
and that will say code,

295
00:14:38.250 --> 00:14:41.660
or if you're on Windows you go to file and then preferences.

296
00:14:41.660 --> 00:14:43.660
You should see one called settings.

297
00:14:43.660 --> 00:14:47.000
I'll post a screen shot of what that looks right now.

298
00:14:47.000 --> 00:14:47.930
This is going to pull up,

299
00:14:47.930 --> 00:14:49.570
you've probably been in here before,

300
00:14:49.570 --> 00:14:52.340
this is a list of all the settings that VS Code has.

301
00:14:52.340 --> 00:14:55.120
What you want to do it click on these little curly brackets

302
00:14:55.120 --> 00:14:56.900
in the top right corner

303
00:14:56.900 --> 00:14:59.340
and that's going to open up the actual text

304
00:14:59.340 --> 00:15:03.930
based one of your settings, and then simply just copy

305
00:15:03.930 --> 00:15:06.530
and paste all of the settings that we have in here.

306
00:15:06.530 --> 00:15:08.080
So, maybe just go to the bottom

307
00:15:09.090 --> 00:15:13.110
and take a look at what the last setting was.

308
00:15:13.110 --> 00:15:16.180
Mine is, doesn't really matter what your last one was.

309
00:15:16.180 --> 00:15:17.290
The only thing you need to know is

310
00:15:17.290 --> 00:15:20.220
you put a comma after the last one,

311
00:15:20.220 --> 00:15:21.280
and then just go ahead

312
00:15:21.280 --> 00:15:23.810
and paste in all of those settings

313
00:15:23.810 --> 00:15:26.080
that we just pasted there,

314
00:15:26.080 --> 00:15:29.310
and let me run through them real quick.

315
00:15:29.310 --> 00:15:32.983
So editor.formatonsave is true.

316
00:15:41.800 --> 00:15:43.850
So let me go through these setting real quick.

317
00:15:43.850 --> 00:15:46.270
This just turns on the format onsave.

318
00:15:46.270 --> 00:15:49.580
There is other plugins that you have in VS Code,

319
00:15:49.580 --> 00:15:52.110
you might have different languages like CSS formatters

320
00:15:52.110 --> 00:15:53.620
that need this turned on.

321
00:15:53.620 --> 00:15:56.560
So, this will just make sure it's turned on,

322
00:15:56.560 --> 00:15:59.950
and then what we do is turn it off for JavaScript

323
00:15:59.950 --> 00:16:02.360
and then I've also turned it off for JavaScript react.

324
00:16:02.360 --> 00:16:04.435
Which is if you're a reactive helper

325
00:16:04.435 --> 00:16:06.060
you'll want to do that as well.

326
00:16:06.060 --> 00:16:09.071
Cause prettier and ESLint work with react as well.

327
00:16:09.071 --> 00:16:10.940
So, turn those to false

328
00:16:10.940 --> 00:16:14.790
and turn the ESLint setting of fixonsave to true.

329
00:16:14.790 --> 00:16:16.920
So. If you don't do this,

330
00:16:16.920 --> 00:16:19.672
sometimes there's like built in plugins with VS Code

331
00:16:19.672 --> 00:16:21.790
where they start to clash

332
00:16:21.790 --> 00:16:24.670
and they both want to like fix your code.

333
00:16:24.670 --> 00:16:27.587
The built in one on VS Code is called beautifier

334
00:16:27.587 --> 00:16:31.330
and it doesn't do as good of job as ESLint and Prettier.

335
00:16:31.330 --> 00:16:34.190
So, what this does is it turns is off for JavaScript

336
00:16:34.190 --> 00:16:37.830
and then we turn on our own ESLint on there

337
00:16:37.830 --> 00:16:42.723
and then also if you have the Prettier extension.

338
00:16:43.790 --> 00:16:45.143
I said earlier.

339
00:16:46.840 --> 00:16:48.465
Also finally this is important

340
00:16:48.465 --> 00:16:52.470
if you have the Prettier extension enabled,

341
00:16:52.470 --> 00:16:55.040
I do not, because I don't have

342
00:16:55.040 --> 00:16:57.330
a Prettier extension on VS Code,

343
00:16:57.330 --> 00:16:58.770
but sometimes people will use Prettier

344
00:16:58.770 --> 00:17:02.520
to format other languages like there's a php Prettier,

345
00:17:02.520 --> 00:17:04.560
there's a css Prettier,

346
00:17:04.560 --> 00:17:06.120
and if you have that

347
00:17:06.120 --> 00:17:09.360
you want to disable that for JavaScipt react.

348
00:17:09.360 --> 00:17:10.193
Why?

349
00:17:10.193 --> 00:17:11.810
Because we're not doing Prettier

350
00:17:11.810 --> 00:17:12.890
through the Prettier plugin

351
00:17:12.890 --> 00:17:14.960
we're doing Prettier through the ESLint plugin.

352
00:17:14.960 --> 00:17:17.190
Which is a little bit confusing.

353
00:17:17.190 --> 00:17:20.550
This stuff can be a real bummer to set up,

354
00:17:20.550 --> 00:17:23.370
so if you have any troubles watch this video again.

355
00:17:23.370 --> 00:17:25.289
Go through all the steps.

356
00:17:25.289 --> 00:17:28.980
I've even got some troubleshooting in the read me.

357
00:17:28.980 --> 00:17:31.010
The way that you can tell that it's working.

358
00:17:31.010 --> 00:17:31.930
I'm just going to go back

359
00:17:31.930 --> 00:17:33.670
and not change anything

360
00:17:33.670 --> 00:17:35.810
because I've already have it set up myself.

361
00:17:35.810 --> 00:17:39.860
Is if you now go to any sort of JavaScript file

362
00:17:39.860 --> 00:17:42.280
and you should see in the bottom right hand corner

363
00:17:42.280 --> 00:17:43.150
it should say ESLint.

364
00:17:43.150 --> 00:17:44.083
If you click it.

365
00:17:50.290 --> 00:17:54.030
You can maybe do, start writing some bad JavaScript.

366
00:17:54.030 --> 00:17:55.830
So, maybe put some spaces in there

367
00:17:55.830 --> 00:17:58.740
and then when I hit save, it's not working.

368
00:17:58.740 --> 00:18:00.940
I'm going to go ahead and try to restart it.

369
00:18:11.630 --> 00:18:13.763
There we go , just restarted my VS Code,

370
00:18:25.140 --> 00:18:28.680
and after a second I hit command S to save my file

371
00:18:28.680 --> 00:18:30.930
and you'll see that it will automatically will format it.

372
00:18:30.930 --> 00:18:32.320
So, I'm going to do,

373
00:18:32.320 --> 00:18:34.603
I'm going to put some double quotes here,

374
00:18:37.260 --> 00:18:39.190
and forget a semicolon.

375
00:18:39.190 --> 00:18:42.113
I'm going to put console and log on it's own line.

376
00:18:44.178 --> 00:18:46.420
I'm going to put a bunch of spaces in here,

377
00:18:46.420 --> 00:18:48.550
and then as soon as I hit save.

378
00:18:48.550 --> 00:18:51.030
You see that it will automatically format it for myself.

379
00:18:51.030 --> 00:18:52.660
If you, if it isn't working

380
00:18:52.660 --> 00:18:55.340
you can click on this little ESLint in the bottom corner

381
00:18:55.340 --> 00:18:58.610
and this will often tell you what the issues

382
00:18:58.610 --> 00:19:01.690
are with it actually running.

383
00:19:01.690 --> 00:19:03.580
Another thing that can happen,

384
00:19:03.580 --> 00:19:06.483
like lets say I just do age is equal to a hundred.

385
00:19:07.640 --> 00:19:10.200
You'll see that I've got these little like underlines,

386
00:19:10.200 --> 00:19:12.010
like you spelled a word wrong

387
00:19:12.010 --> 00:19:13.570
and what this is doing,

388
00:19:13.570 --> 00:19:17.009
that's ESLint telling you what has happened.

389
00:19:17.009 --> 00:19:22.009
It's telling me here replace age with age equals

390
00:19:22.696 --> 00:19:27.520
and it's telling me the error is age is not defined.

391
00:19:27.520 --> 00:19:30.270
So, if I were to save that it fixes the formatting,

392
00:19:30.270 --> 00:19:32.160
but it's not going to actually fix my code.

393
00:19:32.160 --> 00:19:35.400
I have to manually go ahead and make that decision there.

394
00:19:35.400 --> 00:19:37.830
If I make is a let, give it a save.

395
00:19:37.830 --> 00:19:39.750
Oh, you see that right there?

396
00:19:39.750 --> 00:19:42.270
I made it a let and gave it a save

397
00:19:42.270 --> 00:19:47.270
and because ESLint sees that I've made it a let variable,

398
00:19:47.300 --> 00:19:49.700
but I've never reassigned the value of it.

399
00:19:49.700 --> 00:19:52.556
It says, you probably meant to const that by default.

400
00:19:52.556 --> 00:19:55.420
Now you see another one under here.

401
00:19:55.420 --> 00:19:57.390
It's yellow which means it's a warning.

402
00:19:57.390 --> 00:20:01.340
Red is an error, and then a yellow is just a warning.

403
00:20:01.340 --> 00:20:03.640
It's saying just a heads up

404
00:20:03.640 --> 00:20:05.750
you made this variable called age,

405
00:20:05.750 --> 00:20:07.200
but your never actually using it.

406
00:20:07.200 --> 00:20:09.330
So, if I were to go ahead and use that value

407
00:20:09.330 --> 00:20:11.234
then it immediately goes away.

408
00:20:11.234 --> 00:20:12.950
We're going to be using that a lot

409
00:20:12.950 --> 00:20:14.698
throughout this class here.

410
00:20:14.698 --> 00:20:19.698
If you ever do run into an issue that you don't like

411
00:20:19.782 --> 00:20:24.102
you can just go ahead and modify your ESLint r-c file

412
00:20:24.102 --> 00:20:27.330
and change it to whatever it is you want.

413
00:20:27.330 --> 00:20:29.040
This is the way that it works.

414
00:20:29.040 --> 00:20:31.018
You make a rules property here.

415
00:20:31.018 --> 00:20:33.678
We'll talk about what this is.

416
00:20:33.678 --> 00:20:36.763
This is a JavaScript object here and you can set,

417
00:20:39.630 --> 00:20:42.520
you can set rules to two if you want them to error.

418
00:20:42.520 --> 00:20:44.830
Set them to one if you want them to warn,

419
00:20:44.830 --> 00:20:47.480
and zero if you want to ignore that rule entirely.

420
00:20:47.480 --> 00:20:49.387
So, you might run across some stuff you're like,

421
00:20:49.387 --> 00:20:51.717
"You know what Wes, I know better than you.

422
00:20:51.717 --> 00:20:54.310
I'm going to turn this rule off for myself.",

423
00:20:54.310 --> 00:20:56.660
and you can just set it to something like that.

424
00:20:57.645 --> 00:20:59.410
I think that's it.

425
00:20:59.410 --> 00:21:01.790
Hopefully you can get that up and running.

426
00:21:01.790 --> 00:21:05.350
If it doesn't work, try at it for 20 minutes or so,

427
00:21:05.350 --> 00:21:07.662
jump into the slack room and try to get some help.

428
00:21:07.662 --> 00:21:10.120
I know that this stuff is really finicky.

429
00:21:10.120 --> 00:21:11.360
Especially if you're not using

430
00:21:11.360 --> 00:21:13.600
the exact sort of same set up as me.

431
00:21:13.600 --> 00:21:16.270
That's exactly what I've used my ESLint config here,

432
00:21:16.270 --> 00:21:19.080
because people have spent hours on it,

433
00:21:19.080 --> 00:21:21.690
but I don't let this sort of stop you

434
00:21:21.690 --> 00:21:23.909
from going forward in the course

435
00:21:23.909 --> 00:21:25.910
if it's something that you're not able to get going.

436
00:21:25.910 --> 00:21:28.920
So, put a honest half and hour into it if its broken.

437
00:21:28.920 --> 00:21:30.430
Hopefully it will work right away.

438
00:21:30.430 --> 00:21:31.970
Other than that just keep rolling

439
00:21:31.970 --> 00:21:34.870
with the course and see if some one else can help you out.

